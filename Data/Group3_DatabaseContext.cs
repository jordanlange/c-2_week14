// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using group3Database.Models;

namespace group3Database.Data
{
    public partial class Group3_DatabaseContext : DbContext
    {
        public Group3_DatabaseContext()
        {
        }

        public Group3_DatabaseContext(DbContextOptions<Group3_DatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ClassSchedule> ClassSchedules { get; set; }
        public virtual DbSet<ClassTable> ClassTables { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentClass> StudentClasses { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<WeekDay> WeekDays { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClassSchedule>(entity =>
            {
                entity.HasKey(e => new { e.ClassId, e.WeekDayId })
                    .HasName("PK__ClassSch__7237021F03628AC8");

                entity.ToTable("ClassSchedule");

                entity.Property(e => e.WeekDayId)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.HasOne(d => d.Class)
                    .WithMany(p => p.ClassSchedules)
                    .HasForeignKey(d => d.ClassId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ClassSche__Class__70DDC3D8");

                entity.HasOne(d => d.WeekDay)
                    .WithMany(p => p.ClassSchedules)
                    .HasForeignKey(d => d.WeekDayId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ClassSche__WeekD__71D1E811");
            });

            modelBuilder.Entity<ClassTable>(entity =>
            {
                entity.HasKey(e => e.ClassId)
                    .HasName("PK__ClassTab__CB1927C0FB6C430B");

                entity.ToTable("ClassTable");

                entity.Property(e => e.ClassDropEndDate).HasColumnType("date");

                entity.Property(e => e.ClassEndDate).HasColumnType("date");

                entity.Property(e => e.ClassMaxSize).HasDefaultValueSql("((32))");

                entity.Property(e => e.ClassStartDate).HasColumnType("date");

                entity.Property(e => e.ClassWithdrawEndDate).HasColumnType("date");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.ClassTables)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ClassTabl__Cours__6B24EA82");

                entity.HasOne(d => d.Instructor)
                    .WithMany(p => p.ClassTables)
                    .HasForeignKey(d => d.InstructorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ClassTabl__Instr__6C190EBB");

                entity.HasOne(d => d.Room)
                    .WithMany(p => p.ClassTables)
                    .HasForeignKey(d => d.RoomId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ClassTabl__RoomI__6E01572D");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.ToTable("Course");

                entity.Property(e => e.CourseDescription)
                    .IsRequired()
                    .HasColumnType("text");

                entity.Property(e => e.CourseName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.Subject)
                    .WithMany(p => p.Courses)
                    .HasForeignKey(d => d.SubjectId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Course__SubjectI__68487DD7");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.ToTable("Instructor");

                entity.Property(e => e.InstructorEmail)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.InstructorEmpstatus)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("InstructorEMPStatus");

                entity.Property(e => e.InstructorFirstName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InstructorLastName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InstructorMiddleName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N/A')");

                entity.Property(e => e.InstructorPhone)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Room>(entity =>
            {
                entity.ToTable("Room");

                entity.Property(e => e.RoomId).ValueGeneratedNever();
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.HasKey(e => e.ClassStatusCode)
                    .HasName("PK__Status__F727C6A8829B6710");

                entity.ToTable("Status");

                entity.Property(e => e.ClassStatusCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StatusDescription)
                    .IsRequired()
                    .HasColumnType("text");

                entity.Property(e => e.StatusName)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.ToTable("Student");

                entity.Property(e => e.StudentEmail)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.StudentFirstName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StudentLastName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StudentMiddleName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N/A')");

                entity.Property(e => e.StudentPhone)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StudentClass>(entity =>
            {
                entity.HasKey(e => new { e.ClassId, e.StudentId })
                    .HasName("PK__StudentC__48357579B3A56DEE");

                entity.ToTable("StudentClass");

                entity.Property(e => e.ClassStatusCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StudClassGrade)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.Class)
                    .WithMany(p => p.StudentClasses)
                    .HasForeignKey(d => d.ClassId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentCl__Class__76969D2E");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.StudentClasses)
                    .HasForeignKey(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__StudentCl__Stude__778AC167");
            });

            modelBuilder.Entity<Subject>(entity =>
            {
                entity.ToTable("Subject");

                entity.Property(e => e.SubjectName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WeekDay>(entity =>
            {
                entity.ToTable("WeekDay");

                entity.Property(e => e.WeekDayId)
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}